local UserInputService = game:GetService("UserInputService")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local CombatRemoteEvent = Character:WaitForChild("CombatRemoteEvent")
local Humanoid = Character:FindFirstChildOfClass("Humanoid")

-- Create a ScreenGui and TextLabel to display the username/displayname
local screenGui = Instance.new("ScreenGui")
screenGui.Parent = LocalPlayer.PlayerGui

local usernameLabel = Instance.new("TextLabel")
usernameLabel.Size = UDim2.new(0, 200, 0, 50)  -- Adjust size as needed
usernameLabel.Position = UDim2.new(0.5, -100, 0, 50)  -- Adjust position as needed
usernameLabel.BackgroundTransparency = 1  -- Makes background invisible
usernameLabel.TextColor3 = Color3.fromRGB(255, 255, 255)  -- White text
usernameLabel.TextSize = 20  -- Adjust text size
usernameLabel.Text = "Waiting for player..."  -- Initial placeholder text
usernameLabel.Parent = screenGui

-- Variable to store the selected player's username or displayname
local selectedPlayer
local targetClearingTime = 3 -- Time in seconds to clear target if no attack happens
local lastAttackTime = tick()  -- Track the last time an attack happened

-- Function to clear target after delay
local function clearTargetAfterDelay()
    wait(targetClearingTime) -- Wait for the target clearing delay
    if tick() - lastAttackTime >= targetClearingTime then
        clearUsername()  -- Clear target if no attack happens in the specified time
    end
end

-- Modify updateUsername function to account for player joining or leaving
local function updateUsername()
    -- Refresh the player list to include current players
    local playerList = Players:GetPlayers()

    -- Skip "Kiru_Kazuma" and cycle to the next available player
    repeat
        currentPlayerIndex = currentPlayerIndex + 1
        if currentPlayerIndex > #playerList then
            currentPlayerIndex = 1
        end
    until playerList[currentPlayerIndex].Name ~= "Kiru_Kazuma"

    selectedPlayer = playerList[currentPlayerIndex]  -- Store the selected player

    -- Check for DisplayName, if available
    local displayName = selectedPlayer.DisplayName
    if displayName ~= "" then
        usernameLabel.Text = displayName  -- Display DisplayName if available
    else
        usernameLabel.Text = selectedPlayer.Name  -- Fallback to username if no DisplayName
    end
end

-- Function to clear the username, stop targeting, and reset selected player
local function clearUsername()
    usernameLabel.Text = "Nobody"  -- Display "Nobody"
    selectedPlayer = nil  -- Reset the selected player
end

-- Player join and leave events
Players.PlayerAdded:Connect(function(player)
    -- Update the player list and cycle to the next player
    updateUsername()
end)

Players.PlayerRemoving:Connect(function(player)
    -- Update the player list and cycle to the next player
    updateUsername()
end)

-- Function to handle when a player hits you
CombatRemoteEvent.OnClientEvent:Connect(function(action, target)
    if action == "HitHumans" and target and target:IsA("Humanoid") then
        -- Check if the attacker is someone other than the local player
        local attacker = target.Parent and Players:GetPlayerFromCharacter(target.Parent)
        
        if attacker and attacker ~= LocalPlayer then
            selectedPlayer = attacker  -- Automatically target the player who hit you
            updateUsername()  -- Update the UI with the attacker's name
            lastAttackTime = tick()  -- Reset attack timer

            -- Start the target clearing delay
            spawn(clearTargetAfterDelay)
        end
    end
end)

-- Reset attack timer when you attack
UserInputService.InputBegan:Connect(function(input, isProcessed)
    if isProcessed then return end
    if input.KeyCode == Enum.KeyCode.T or input.KeyCode == Enum.KeyCode.X or input.KeyCode == Enum.KeyCode.C then
        lastAttackTime = tick()  -- Reset the attack timer when you attack
    end
end)

-- Draggable functionality
local dragging = false
local dragInput
local dragStart
local startPos

usernameLabel.InputBegan:Connect(function(input, isProcessed)
    if isProcessed then return end
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = usernameLabel.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

usernameLabel.InputChanged:Connect(function(input)
    if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
        local delta = input.Position - dragStart
        usernameLabel.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
end)

-- Keybind functions
local function onPressR()
    if selectedPlayer then
        local args = {
            [1] = "HitHumans",
            [2] = selectedPlayer.Character.Humanoid,
            [3] = "Hit",
            [4] = 0.7,
            [5] = "sHIG"
        }
        CombatRemoteEvent:FireServer(unpack(args))
    end
end

local tAnimations = {
    "rbxassetid://18848991738",
    "rbxassetid://18848994262"
}
local currentTAnim = 1 -- Tracks which animation to play
local animationSpeed = 1.5 -- Adjust speed as needed
local currentTrack = nil -- Keep track of the current animation

local function playTAnimation()
    if Humanoid then
        -- Stop the current animation if it's already playing
        if currentTrack then
            currentTrack:Stop()
        end

        -- Load and play the new animation
        local animator = Humanoid:FindFirstChildOfClass("Animator") or Instance.new("Animator", Humanoid)
        local animation = Instance.new("Animation")
        animation.AnimationId = tAnimations[currentTAnim]
        currentTrack = animator:LoadAnimation(animation)
        currentTrack:Play()
        currentTrack:AdjustSpeed(animationSpeed) -- Set speed

        -- Cycle to the next animation
        currentTAnim = currentTAnim == 1 and 2 or 1
    end
end

-- Update T key input
UserInputService.InputBegan:Connect(function(input, isProcessed)
    if isProcessed then return end
    if input.KeyCode == Enum.KeyCode.T then
        playTAnimation()
        onPressR() -- Keep the attack function if needed
    end
end)

-- HeatAction function (H key)
local function onPressH()
    if selectedPlayer then
        local args = {
            [1] = "HitHumans",
            [2] = selectedPlayer.Character.Humanoid,
            [3] = "HeatAction",
            [6] = true
        }
        CombatRemoteEvent:FireServer(unpack(args))
    end
end

-- Skill1 action (C key)
local function onPressC()
    if selectedPlayer then
        local targetPlayer = Players:FindFirstChild(selectedPlayer.Name)
        if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("Humanoid") then
            local args = {
                [1] = "HitHumans",
                [2] = targetPlayer.Character.Humanoid,
                [3] = "Skill1",
                [6] = true
            }
            CombatRemoteEvent:FireServer(unpack(args))
        end
    end
end

-- Function to play an animation
local function playAnimation(animationId)
    if Humanoid then
        local animator = Humanoid:FindFirstChildOfClass("Animator") or Instance.new("Animator", Humanoid)
        local animation = Instance.new("Animation")
        animation.AnimationId = animationId
        local track = animator:LoadAnimation(animation)
        track:Play()
    end
end

-- Function to perform the "Finisher" attack
local function performFinisher()
    if selectedPlayer then
        local args = {
            [1] = "HitHumans",
            [2] = selectedPlayer.Character.Humanoid,
            [3] = "Finisher",
            [4] = 1.2,
            [5] = "kLEF"
        }
        CombatRemoteEvent:FireServer(unpack(args))
    end
end

-- Function to perform the "Finish" attack
local function performFinish()
    if selectedPlayer then
        local args = {
            [1] = "HitHumans",
            [2] = selectedPlayer.Character.Humanoid,
            [3] = "Hit",
            [4] = 1.2,
            [5] = "fMID",
            [6] = true
        }
        CombatRemoteEvent:FireServer(unpack(args))
    end
end

local currentXTrack = nil -- Keep track of the current animation for X

local function playXAnimationAndFinisher()
    if Humanoid then
        -- Stop the current animation if it's already playing
        if currentXTrack then
            currentXTrack:Stop()
        end

        -- Play the X animation
        local animator = Humanoid:FindFirstChildOfClass("Animator") or Instance.new("Animator", Humanoid)
        local animation = Instance.new("Animation")
        animation.AnimationId = "rbxassetid://102659075524987" -- Play animation
        currentXTrack = animator:LoadAnimation(animation)
        currentXTrack:Play()

        -- Perform the Finisher attack
        performFinish() -- Execute the Finisher action
    end
end

-- Update X key input
UserInputService.InputBegan:Connect(function(input, isProcessed)
    if isProcessed then return end
    if input.KeyCode == Enum.KeyCode.X then
        playXAnimationAndFinisher() -- Play animation and perform Finisher
    end
end)

local currentCTrack = nil -- Keep track of the current animation for C

local function playCAnimationAndFinisher()
    if Humanoid then
        -- Stop the current animation if it's already playing
        if currentCTrack then
            currentCTrack:Stop()
        end

        -- Play the C animation
        local animator = Humanoid:FindFirstChildOfClass("Animator") or Instance.new("Animator", Humanoid)
        local animation = Instance.new("Animation")
        animation.AnimationId = "rbxassetid://99054281831610" -- Play animation
        currentCTrack = animator:LoadAnimation(animation)
        currentCTrack:Play()

        -- Wait for 0.7 seconds before performing the Finisher attack
        wait(0.7) -- Adjust the wait time if needed
        performFinisher() -- Execute the Finisher action
    end
end

-- Update C key input
UserInputService.InputBegan:Connect(function(input, isProcessed)
    if isProcessed then return end
    if input.KeyCode == Enum.KeyCode.C then
        playCAnimationAndFinisher() -- Play animation and perform Finisher
    end
end)

local currentNTrack = nil -- Keep track of the current animation for N

local function playNAnimation()
    if Humanoid then
        -- Stop the current animation if it's already playing
        if currentNTrack then
            currentNTrack:Stop()
        end

        -- Play the N animation
        local animator = Humanoid:FindFirstChildOfClass("Animator") or Instance.new("Animator", Humanoid)
        local animation = Instance.new("Animation")
        animation.AnimationId = "rbxassetid://18848797317" -- Play animation
        currentNTrack = animator:LoadAnimation(animation)
        currentNTrack:Play()
    end
end

-- Update N key input
UserInputService.InputBegan:Connect(function(input, isProcessed)
    if isProcessed then return end
    if input.KeyCode == Enum.KeyCode.N then
        playNAnimation() -- Play animation for fun
    end
end)

local currentJTrack = nil -- Keep track of the current animation for J

local function playJAnimation()
    if Humanoid then
        -- Stop the current animation if it's already playing
        if currentJTrack then
            currentJTrack:Stop()
        end

        -- Play the J animation
        local animator = Humanoid:FindFirstChildOfClass("Animator") or Instance.new("Animator", Humanoid)
        local animation = Instance.new("Animation")
        animation.AnimationId = "rbxassetid://84065993964036" -- Play animation
        currentJTrack = animator:LoadAnimation(animation)
        currentJTrack:Play()
    end
end

-- Update J key input
UserInputService.InputBegan:Connect(function(input, isProcessed)
    if isProcessed then return end
    if input.KeyCode == Enum.KeyCode.J then
        playJAnimation() -- Play animation for fun
    end
end)

-- Function to set STANCE, STANCEWALK, and STANCESTART animations (AnimationId)
local function setStanceAnimations()
    local officer = workspace:FindFirstChild("Kiru_Kazuma") and workspace.Kiru_Kazuma:FindFirstChild("Officer")
    
    if officer then
        local animationFolder = officer:FindFirstChild("AnimationFolder")
        
        if animationFolder then
            -- Set STANCE animation
            local stance = animationFolder:FindFirstChild("STANCE")
            if stance then stance.AnimationId = "rbxassetid://18848797317" end
            
            -- Set STANCEWALK animation
            local stanceWalk = animationFolder:FindFirstChild("STANCEWALK")
            if stanceWalk then stanceWalk.AnimationId = "rbxassetid://18848797317" end
            
            -- Set STANCESTART animation
            local stanceStart = animationFolder:FindFirstChild("STANCESTART")
            if stanceStart then stanceStart.AnimationId = "rbxassetid://18848797317" end
        end
    end
end
